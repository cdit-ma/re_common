syntax="proto3";

import "google/protobuf/timestamp.proto";

package AggServer;

/// Request/Response messages
message PortLifecycleRequest {
    repeated google.protobuf.Timestamp time_interval = 1;
    repeated string port_paths = 2; // filter results by expected ports
    repeated string component_instance_paths = 3; // filter results by expected
    repeated string component_names = 4;

}

message PortLifecycleResponse {
    repeated PortLifecycleEvent events = 1;
}


message WorkloadRequest {
    repeated google.protobuf.Timestamp time_interval = 1;
    repeated string worker_paths = 2; // filter results by expected ports
    repeated string component_instance_paths = 3; // filter results by expected
    repeated string component_names = 4;

}

message WorkloadResponse {
    repeated WorkloadEvent events = 1;
}


message CPUUtilisationRequest {
    repeated google.protobuf.Timestamp time_interval = 1;
    repeated string node_ids = 2;
}

message CPUUtilisationResponse {
    repeated CPUUtilisationEvent events = 1;
}

///Event messages
message PortLifecycleEvent {
    
    Port port = 1;
    LifecycleType type = 2;
    google.protobuf.Timestamp time = 3;
}

message WorkloadEvent {
    enum WorkloadEventType {
        STARTED = 0;
        FINISHED = 1;
        MESSAGE = 2;
        WARNING = 3;
	    ERROR_EVENT = 4;
    }

    WorkerInstance worker_inst = 1;
    WorkloadEventType type = 2;
    uint32 workload_id = 3;
    google.protobuf.Timestamp time = 4;

    string function_name = 5;            //Workers Function Name
    string args = 6;
    uint32 log_level = 7;
}

message CPUUtilisationEvent {
    Node node = 1;
    double cpu_utilisation = 2;
    google.protobuf.Timestamp time = 3;
}

/// Event enums
enum LifecycleType {
    NO_TYPE = 0;
    CONFIGURE = 1;
    ACTIVATE = 2;
    PASSIVATE = 3;
    TERMINATE = 4;
}


/// Model structure Messages
message Port {
    enum Kind {
        NO_KIND = 0;
        PERIODIC = 1;
        PUBLISHER = 2;
        SUBSCRIBER = 3;
        REQUESTER = 4;
        REPLIER = 5;
    }
    string path = 1;
    //ComponentInstance component_instance = 2;
    string name = 3;
    Kind kind = 4;
    string middleware = 5;
    string graphml_id = 6; 
}

message WorkerInstance {
    
    string name = 1;
    string path = 2;
    string graphml_id = 3;
}

message ComponentInstance {
    Component component = 1;
    Container container = 2;
    string name = 3;
    string path = 4;
    string graphml_id = 5;
}


message Component {
    string name = 1;
    string graphml_id = 2;
}

message Container {
    enum ContainerType {
        GENERIC = 0;
        DOCKER = 1;
    }
    string name = 1;
    ContainerType type = 2;
    Node node = 3;
    string graphml_id = 4;
}

message Node {
    string hostname = 1;
    string ip = 2;
    string graphml_id = 3;
}
